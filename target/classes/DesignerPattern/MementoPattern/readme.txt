备忘录模式：

    定义：在不破坏封装的前提下，捕获一个的对象的内部状态，并在该对象之外保存这个状态，这样以后就可以恢复到原来的状态

    角色：
        1、发起人：记录当前时刻的内部状态，负责定义哪些属性属于备份范围的状态，负责创建和恢复备忘录数据
        2、备忘录：负责存储发起人角色对象的内部状态，在需要的时候提供发起人需要的内部状态
        3、备忘录管理者：对备忘录进行管理、保存、提供备忘录（这样我们就不用关注备忘录，值关注如何使用被备忘录即可）

    应用：
        有很多变形和处理方式

    使用场景：
        1、需要保存和恢复数据的场景
        2、提供一个回滚的操作
        3、需要监控的副本场景：需要监控，但是监控又不是主要业务，属于边缘业务来使用
        4、数据库连接的事务管理用的就是备忘录模式。

    扩展：
        1、clone方式的备份：结合原型模式，实现Cloneable接口，
           不需要备忘录角色了，发起者和备忘录管理两个角色即可（也可以不需要备忘录管理对象，直接在发起者里面存一个backup即可）
           （适合较简单的场景）
        2、多状态备忘录：用一个HashMap来记录所有状态，然后再恢复（个人感觉结合clone方式会更好）
        3、多备份备忘录：使用一个HashMap来记录不同时间/版本下的备份，来主动选择获取

