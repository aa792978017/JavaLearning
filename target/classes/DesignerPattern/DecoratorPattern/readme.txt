装饰者模式：

定义：动态地给一个对象添加一些额外的职责，就增加功能来说，装饰者模式比生成子类更灵活

优点
    1、装饰类和被装饰类可以独立发展，不会相互耦合
    2、是继承的一个替代方案
    3、可以动态扩展一个实现类的功能

缺点：
    装饰类过多的时候，错误排查等都比较困难，因为包装太深，得一层一层去发现问题

应用场景：
    需要动态扩展一个类的功能，或者给一个类的附加功能
    需要动态地给一个对象添加功能，这些功能可以再动态地撤销
    需要为一批兄弟进行改装或加功能

具体案例：
    1、Collections包里面的集合框架包装，把一个非同步的List封装成一个同步的List(在它同步方法里面调用非同步方法，这样就可以完成了)
    2、Spring里面把一个自定义的Bean包装成一个BeanDefination，放入bean容器
    3、Java的IO包里面的inputStream等