设计模式总结：


    创建类模式：   用于创建对象
        1、工厂方法模式
        2、建造者模式
        3、抽象工厂模式
        4、单例模式
        5、原型模式

        工厂方法和建造者模式的区别：
            1、工厂方法模式关注的是一个整体，而不关注产品内部是怎么创建的         ---关注整体
            2、建造者模式中一个产品的产生是依赖于产品的装配顺序的，一步步装配出产品 ---关注整体的装配步骤


    结构类模式：   都是通过组合类或对象产生更大结构以适应更高的层次的逻辑需求
        1、适配器模式
        2、桥梁模式
        3、组合模式
        4、装饰模式
        5、门面模式
        6、享元模式
        7、代理模式


        代理模式与装饰者模式区别
            代理模式看重对代理过程的控制，而装饰模式则是对类的功能加强（它们都得保证接口不变的前提使用）

        装饰模式与适配器模式区别
            同：都是包装作用
            异：
                1、装饰者模式是装饰同接口或者同基类的对象，而适配器模式是装饰非亲缘关系的类（非相同接口的对象）
                2、适配器用做补救、转化，装饰者用做增强


    行为类模式：
        1、命令模式
        2、责任链模式
        3、解释器模式
        4、迭代器模式
        5、中介者模式
        6、备忘录模式
        7、观察者模式
        8、状态模式
        9、策略模式
        10、模板方法模式
        11、访问者模式

        命令模式与策略模式的区别：
            命令模式关注解藕问题，请求者和执行者的解藕;以及命令的实现，也就是功能的实现
            策略模式关注算法的替换，具体的算法是负责一个完整的算法逻辑，它是不可拆分的原子业务单元

        策略模式与状态模式的区别：
            同：都是提供一个封装的方法，都是高扩展性的设计模式
            异：
                1、策略模式封装的是不同的算法，算法间没有交互，以达到相互切换的目的
                2、状态模式是封装不同的状态，以达到状态切换行为随之发生改变的目的
                3、环境角色的职责不同：策略模式的环境角色只起委托的作用，
                    状态模式不仅起委托作用，还有登记状态，与具体的状态类协作等作用

        观察者模式与责任链模式的区别：
            同：都可以实现链式处理：观察者链（触发链，多个观察者模式嵌套），责任链
            异：
                1、链中的消息对象不同：责任链中消息基本是不变的，而观察者链则是允许变化的，只要上下级节点了解观察对象即可
                2、上下节点的关系不同：责任链中，上下级节点没有关系，而触发链中则是明显的上下级关系，相邻的节点消息对象固定


    不同类型模式的选择：

        策略模式与桥梁模式：
            策略模式：使用继承和多态建立一套可以自由切换算法的模式
            桥梁模式：在不破坏封装的前提下解决抽象和实现都可以独立扩展的模式

        门面模式与中介者模式：
            门面模式主要是以封装和隔离为主要任务，无业务逻辑，仅仅是方法的调用组合
            中介者模式是以调和同事类之间的关系为主，因此有部分业务逻辑
            区别：
                1、功能区别：门面只是增加门面，无增加新的功能，而中介者则增加了业务逻辑
                2、暴露情况：门面模式里面，子系统不知道门面的存在;中介者则是两者都知道彼此存在




