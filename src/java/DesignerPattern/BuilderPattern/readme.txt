建造者模式：

    定义：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示

    角色：
        1、产品类：通常实现了模板方法模式，有模板方法和基本方法
        2、抽象建造者：规范产品的组建，一般是由子类去实现。
        3、具体建造者：实现抽象建造者定义的所有方法，返回一个组建好的对象
        4、导演类：负责安排已有模块的顺序，然后高速Builder开始建造
        （使用组合和继承即可实现）

    优点：
        1、封装性：可以使客户端不知道内部产品的实现。
        2、建造者独立，容易扩展
        3、便于控制细节风险：具体建造者是独立的，因此可以对建造过程逐步细化，不对其他模块产生影响

    使用场景：
        1、相同的方法，不同的执行顺序，产生不同的执行结果
        2、多个部件或零件，都可以装配到一个对象中，但是产生的运行结果由不相同
        3、产品类非常复杂，或者是产品类中的调用顺序不同产生了不同的效能

    注意事项：
        跟工厂方法模式分别开：两者虽都是创建类，但注重点不一样，
            建造者模式关注零件的类型和装配工艺（顺序，即基本方法的调用顺序）
            工厂方法模式关注把这个零件创建出来，而不是关注顺序