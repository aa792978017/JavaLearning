访问者模式

    定义：封装一些作用于某种数据结构中的各元素的操作，它可以在不改变数据结构的前提下定义作用于这些元素的新的操作

    角色：
        1、抽象访问者：抽象类或者接口，声明访问者可以访问哪些元素
        2、具体访问者：它影响访问者访问到一个类后该怎么干，要具体左什么事情
        3、抽象元素：接口或抽象类，声明哪一类访问者访问，程序上是通过accept方法中的参数来定义的（Employee）
        4、具体元素：实现accept方法，通常是visitor.visit(this)
        5、结构对象：案例中用了List

    优点：
        1、符合单一职责原则：抽象元素和具体元素负责数据加载，访问者负责数据展示
        2、扩展性好：如果要新增对数据的操作，只需要在原来Visitor上的新增一个方法或者新建一个Visitor类
        3、灵活性很高：如果要实现其他的数据处理，只需要在访问者上做处理即可

    缺点：
        1、具体元素访问公布细节，访问者关注了内部细节
        2、具体元素变更比较困难
        3、违背了依赖倒置，依赖具体元素

    使用场景：
        1、对一个对象结构中的对象进行不同并且不相关的操作
        2、一个对象结构中包含很多类对象，对这些对象实现依赖具体类的动作
        3、业务要求遍历集合中不同对象，执行不同的操作，是对迭代器的补充
        4、充当一个拦截器

     扩展：
        1、统计功能
        2、多个访问者
        3、双分派：利用重载（静态绑定），覆写（动态绑定），实现执行的操作请求的种类和接收两个接受这的类型（Java是一个支持双分派的单分派语言）