<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>Study</groupId>
  <artifactId>JavaLearning</artifactId>
  <version>1.0-SNAPSHOT</version>
  <!--打包的类型-->
  <!--<packaging>war</packaging>-->
  <packaging>jar</packaging>
  <name>miaosha_idea</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.9.RELEASE</version>
  </parent>

  <properties>
    <!--    定义全局属性-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <java.version>1.8</java.version>
    <junit.version>4.11</junit.version>
    <mybatis.springboot.version>1.3.1</mybatis.springboot.version>
    <druid.version>1.0.5</druid.version>
    <jedis.version>2.9.0</jedis.version>
    <fastjson.version>1.2.38</fastjson.version>
    <checkstyle.vesion>6.12</checkstyle.vesion>
    <commons.codec.version>1.10</commons.codec.version>
    <commons.lang3.version>3.6</commons.lang3.version>
    <cobetura.version>2.7</cobetura.version>
    <findbugs.version>3.0.1</findbugs.version>
    <jacoco.version>0.7.7.201606060606</jacoco.version>
    <jacoco.exec.location>target/coverage-reports/jacoco-unit.exec</jacoco.exec.location>
    <!--    <check.config.location>${basedir}/../conf/checkstyle_ruleset_supms.xml</check.config.location>-->
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <!--编译时依赖-->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>${mybatis.springboot.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>

    <!--做md5-->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang3.version}</version>
    </dependency>
    <!--参数校验,已经是一个标准了-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <!--//添加热部署依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
    </dependency>

    <!--代码风格检查 命令：mvn -B -f pom.xml clean install checkstyle:checkstyle -Dmaven.test.skip=true-->
    <dependency>
      <groupId>com.puppycrawl.tools</groupId>
      <artifactId>checkstyle</artifactId>
      <version>${checkstyle.vesion}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>RELEASE</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <!--打出来的war包的名字-->
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!--jar-->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!--cobertura代码覆盖率插件-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${cobetura.version}</version>
        <configuration>
          <check/>
          <instrumentation>
            <includes>
              <include>com\**</include>
            </includes>
          </instrumentation>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <aggregate>true</aggregate>
        </configuration>
      </plugin>
      <!--findbugs静态检查 命令：mvn -B -f pom.xml clean install findbugs:findbugs -Dmaven.test.skip=true-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs.version}</version>
        <configuration>
          <threshold>High</threshold>
          <effort>Default</effort>
          <findbugsXmlOutput>true</findbugsXmlOutput>
          <xmlOutput>true</xmlOutput>
          <findbugsXmlOutputDirectory>target/site</findbugsXmlOutputDirectory>
        </configuration>
      </plugin>
      <!--      这个插件是干啥的没搞懂，生成的聚合报告有啥用呢。-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.21.0</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <!--          指定exec文件存放位置-->
          <destFile>${jacoco.exec.location}</destFile>
          <!--          Jacoco根据exec文件生成最终的报告，这里指定exec存放在哪-->
          <dataFile>${jacoco.exec.location}</dataFile>
        </configuration>
        <executions>
          <!--          这个应该是黑盒代理-->
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!--          这个里应该是白盒测试 -->
          <!--          命令：mvn test; mvn surefire-report:report-only -Daggregate=true;-->
          <execution>
            <id>jacoco-site</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
      <!--war-->
      <!--<plugin>-->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-war-plugin</artifactId>-->
      <!--<configuration>-->
      <!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
      <!--</configuration>-->
      <!--</plugin>-->

    </plugins>
  </build>
</project>
